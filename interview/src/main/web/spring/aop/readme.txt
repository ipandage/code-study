面向切面编程 ，它主要关注的是程序的执行过程。AOP主要实现的目的是针对业务处理过程中的切面进行提取，它所面对的是处理过程中的某个步骤或阶段，
以获得逻辑过程中各部分之间低耦合性的隔离效果。

具体解析：在Java方法调用时，AOP机制能自动进行方法拦截，允许在方法调用之前，调用后，以及执行异常时添加特定的代码来完成需要的功能。
作用：
1）消除编码模块之间的耦合性。
2）可以在任意阶段，向已有功能模块中填加新功能，且不侵入原有功能，是低侵入式设计。
3）各步骤之间的良好隔离性 , 源代码的无关性。