------------------ Keepalived  -----------------------------------------------------

------------------ 架构 -----------------------------------------------------
构建高并发高可用的电商平台架构实践
http://blog.csdn.net/yangbutao/article/details/12242441
设计理念
1.空间换时间
2.并行与分布式计算
3.多维度的可用
4.伸缩
5.系统资源利用

架构
1.CDN
2.负载均衡 反向代理
3.App接入
4.业务服务
5.基础服务中间件
    5.1 通讯组件
    5.2 路由router
    5.3 HA（高可用）
    5.4 消息message
    5.5 Cache & Buffer
    5.6 搜索
    5.7 日志收集
    5.8 数据同步
    5.9 数据分析
    5.10 实时计算
    5.11 实时推送
    5.12 推荐引擎
6.数据存储
    6.1 内存数据库
    6.2 关系型数据库
    6.3 分布式数据库
7.管理与部署配置
8.监控、统计

------------------ 网络 -----------------------------------------------------
epoll为什么比select这么快? http://blog.csdn.net/zkf11387/article/details/7687232
目前支持io多路复用的系统调用有select pselect poll epoll ，io多路复用就是通过一种机制，一个进程可以监视多个描述符，
一旦描述符就绪，就通知应用程序进行相应的读写操作，但select pselect poll本质上都是同步的io操作，因为他们都需要在读写事件就绪后
自己负责读写，也就是说这个读写过程是阻塞的，而异步的io则无需自己进行读写，异步的io会负责把数据从内核拷贝到用户空间

